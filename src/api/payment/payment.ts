/**
 * Generated by orval v6.26.0 🍺
 * Do not edit manually.
 * student-hub-api
 * Api Documentation for StudentHub API
 * OpenAPI spec version: 0.0
 */
import {
  useMutation
} from 'react-query'
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult
} from 'react-query'
import type {
  CheckoutMasterClass200,
  CheckoutMasterClassBody
} from '.././model'
import { instance } from '.././instance';



/**
 * get stripe link for user checkout
 */
export const checkoutMasterClass = (
    checkoutMasterClassBody: CheckoutMasterClassBody,
 ) => {
      
      
      return instance<CheckoutMasterClass200>(
      {url: `/checkout/hosted/course/mat`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: checkoutMasterClassBody
    },
      );
    }
  


export const getCheckoutMasterClassMutationOptions = <TError = unknown,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof checkoutMasterClass>>, TError,{data: CheckoutMasterClassBody}, TContext>, }
): UseMutationOptions<Awaited<ReturnType<typeof checkoutMasterClass>>, TError,{data: CheckoutMasterClassBody}, TContext> => {
const {mutation: mutationOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof checkoutMasterClass>>, {data: CheckoutMasterClassBody}> = (props) => {
          const {data} = props ?? {};

          return  checkoutMasterClass(data,)
        }

        


  return  { mutationFn, ...mutationOptions }}

    export type CheckoutMasterClassMutationResult = NonNullable<Awaited<ReturnType<typeof checkoutMasterClass>>>
    export type CheckoutMasterClassMutationBody = CheckoutMasterClassBody
    export type CheckoutMasterClassMutationError = unknown

    export const useCheckoutMasterClass = <TError = unknown,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof checkoutMasterClass>>, TError,{data: CheckoutMasterClassBody}, TContext>, }
): UseMutationResult<
        Awaited<ReturnType<typeof checkoutMasterClass>>,
        TError,
        {data: CheckoutMasterClassBody},
        TContext
      > => {

      const mutationOptions = getCheckoutMasterClassMutationOptions(options);

      return useMutation(mutationOptions);
    }
    